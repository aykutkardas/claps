.claps-root {
  --clap-like: #ff3b61;
  --animate-duration: 600ms;

  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;

  position: relative;
  z-index: 1;
  font-size: 15px;
  line-height: 1;
  user-select: none;
}

.claps-root * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.claps-fixed-left,
.claps-fixed-center,
.claps-fixed-right {
  position: fixed;
  bottom: 1rem;
  z-index: 10;
}

.claps-fixed-left {
  left: 1rem;
}

.claps-fixed-center {
  left: 50%;
  transform: translateX(-50%);
}

.claps-fixed-right {
  right: 1rem;
}

.claps-body {
  display: flex;
  align-items: center;
  padding: 3px;
  color: #000;
  background-color: #fff;
  border-radius: 40px;
  filter: drop-shadow(0 4px 3px rgb(0 0 0 / 4%)) drop-shadow(0 2px 2px rgb(0 0 0 / 3%));
}

.claps-divider {
  transition: 120ms;
  display: block;
  width: 1px;
  margin-left: -1px;
  height: 1.1em;
  background-color: rgb(0 0 0 / 10%);
}

.claps-button {
  padding: 10px 12px;
  display: flex;
  align-items: center;
  gap: 0.3em;
  font: inherit;
  background-color: transparent;
  transition: 120ms;
  border-radius: 10px;
}

.claps-button:first-child {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
}

.claps-button:last-child {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}

.claps-button:hover {
  background-color: rgb(0 0 0 / 5%);
}

.claps-button-suffix {
  opacity: 0.4;
}

.claps-body:hover .claps-divider {
  background-color: transparent;
}

.claps-button svg {
  color: rgb(0 0 0 / 60%);
}

.claps-button:hover svg {
  color: rgb(0 0 0 / 100%);
}

.claps-button-clap.clapped svg {
  color: var(--clap-like);
  fill: currentColor;
}

/* https://github.com/animate-css/animate.css */

.animated {
  animation-duration: var(--animate-duration);
  animation-fill-mode: both;
}

@keyframes headShake {
  0% { transform: translateX(0) }
  6.5% { transform: translateX(-6px) rotateY(-9deg) }
  18.5% { transform: translateX(5px) rotateY(7deg) }
  31.5% { transform: translateX(-3px) rotateY(-5deg) }
  43.5% { transform: translateX(2px) rotateY(3deg) }
  50% { transform: translateX(0) }
}

.headShake {
  animation-timing-function: ease-in-out;
  animation-name: headShake;
}

@keyframes heartBeat {
  0% { transform: scale(1) }
  14% { transform: scale(1.1) }
  28% { transform: scale(1) }
  42% { transform: scale(1.1) }
  70% { transform: scale(1) }
}

.heartBeat {
  animation-name: heartBeat;
  animation-duration: calc(var(--animate-duration) * 1.3);
  animation-timing-function: ease-in-out;
}
